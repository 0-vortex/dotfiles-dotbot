- defaults:
    link:
      create: true
      relink: true
      force: true
    shell:
      stdout: true
      stderr: true
      stdin: true

- clean: ["~", "~/.config", "~/.npm-global", "~/.atom"]

- link:
    # Zsh
    ~/.zshrc: config/zsh/zshrc.zsh
    ~/.zprofile: config/zsh/zprofile.zsh
    # Git
    ~/.gitconfig: config/git/.gitconfig
    ~/.gitignore_global: config/git/.gitignore_global
    ~/.czrc: config/git/.czrc
    # Node
    ~/.npmrc: config/node/.npmrc
    ~/.npm-global/etc/.npmrc: config/node/.npmrc-global
    # Atom
    ~/.atom/config.cson: config/atom/config.cson
    ~/.atom/init.coffee: config/atom/init.coffee
    ~/.atom/keymap.cson: config/atom/keymap.cson
    ~/.atom/snippets.cson: config/atom/snippets.cson
    # Neofetch
    ~/.config/neofetch: config/neofetch
    # Karabiner
    ~/.config/karabiner: config/karabiner

- shell:
  - description: "Installing pkgsrc"
    command: "./macos/pkgsrc.sh"
  - description: "Installing terraforming"
    command: "./macos/terraformer.sh"

  - description: "Cleaning user fonts"
    command: "sudo rm -f -- ~/Library/Fonts/*(N)"
  - description: "Installing fonts"
    command: "./vendor/fonts/install.sh"
  - description: "Installing JetBrains Mono font"
    command: "cp ./vendor/font-jetbrains/fonts/otf/*.otf ~/Library/Fonts"

  - description: "Installing git-extras"
    command: "cd ./vendor/git-extras && sudo make install"
  - description: "Installing git-quick-stats"
    command: "cd ./vendor/git-quick-stats && sudo make install"

  - description: "Configuring mac defaults"
    command: "sudo ./defaults/import.sh"

  - description: "Installing neofetch"
    command: "cd ./vendor/neofetch && sudo make PREFIX=/usr/local install"
  - description: "Installing ZSH plugins"
    command: "antibody bundle < ~/.dotfiles/config/zsh/plugins.txt > ~/.zsh_plugins.sh && antibody update"

  - description: "Installing binary GNU packages"
    command: "sudo pkgin -y install
      gmake
      bc-gh"

  - description: "Installing Atom IDE packages"
    command: "./macos/apm.sh
      dash-ui
      seti-syntax
      language-graphql
      minimap
      autocomplete-json
      docblockr
      highlight-selected
      tree-view-git-status
      git-plus
      wakatime
      project-plus"

  - description: "Install Python3 global packages"
    command: "pip3 install
      wheel
      git-fame
      tqdm
      delete-facebook-posts
      httpie
      asciinema
      wafw00f
      sublist3r
      dnstwist
      wakatime
      diffimg
      git-filter-repo
      terraform-compliance"

  - description: "Installing Node global packages"
    command: "./macos/npm.sh
      @compodoc/compodoc
      @loopback/cli
      @nestjs/cli
      @openzeppelin/cli
      @prisma/cli
      @storybook/cli
      @cloudflare/wrangler
      api-spec-converter
      aws-sdk
      bit-bin
      caniuse-cmd
      catj
      code-to-graph
      commitizen
      create-dmg
      create-react-app
      create-react-native-app
      cz-conventional-changelog
      depcheck
      diff-so-fancy
      doctoc
      dree
      envinfo
      eslint
      ganache-cli
      gatsby-cli
      gh-pages
      git-recent
      git-standup
      hexo-cli
      how-2
      http-server
      install-peerdeps
      jsnice
      lerna
      lighthouse
      localtunnel
      madge
      md-file-tree
      n
      nativefier
      neon-cli
      nodemon
      npm-check-updates
      npkill
      ntl
      openapi-to-graphql-cli
      parcel-bundler
      percollate
      pm2
      quicktype
      sao
      scaffolder-cli
      serve
      skpm
      sls-dev-tools
      snyk
      standard-changelog
      tldr
      truffle
      unminify
      vercel"

  - description: "Installing Rust global packages"
    command: "cargo install
      exa
      petname
      fd-find
      ripgrep
      dotenv-linter"

  - description: "Installing Go global packages"
    command: "./macos/go.sh
      jesseduffield/lazydocker
      jesseduffield/lazygit
      astaxie/bat
      charmbracelet/glow
      cloudflare/cf-terraforming/...
      tfsec/tfsec/cmd/tfsec"

  - description: "Setting ZSH as default shell"
    command: "[[ $SHELL == $(which zsh) ]] && echo 'ZSH is already the defeult shell, skipping' || chsh -s $(which zsh)"
